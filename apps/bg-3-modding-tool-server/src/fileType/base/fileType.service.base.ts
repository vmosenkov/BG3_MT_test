/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, FileType as PrismaFileType } from "@prisma/client";

export class FileTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FileTypeCountArgs, "select">): Promise<number> {
    return this.prisma.fileType.count(args);
  }

  async fileTypes(
    args: Prisma.FileTypeFindManyArgs
  ): Promise<PrismaFileType[]> {
    return this.prisma.fileType.findMany(args);
  }
  async fileType(
    args: Prisma.FileTypeFindUniqueArgs
  ): Promise<PrismaFileType | null> {
    return this.prisma.fileType.findUnique(args);
  }
  async createFileType(
    args: Prisma.FileTypeCreateArgs
  ): Promise<PrismaFileType> {
    return this.prisma.fileType.create(args);
  }
  async updateFileType(
    args: Prisma.FileTypeUpdateArgs
  ): Promise<PrismaFileType> {
    return this.prisma.fileType.update(args);
  }
  async deleteFileType(
    args: Prisma.FileTypeDeleteArgs
  ): Promise<PrismaFileType> {
    return this.prisma.fileType.delete(args);
  }
}
